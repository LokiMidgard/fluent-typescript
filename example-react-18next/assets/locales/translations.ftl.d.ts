// This file is automatically generated.
// Please do not change this file!

type Message0<T extends MessagesKey0> = {
  id: T
  value: T
  attributes: Record<string, T>
}

import { FluentVariable } from '@fluent/bundle'

declare module 'react-i18next' {
  interface UseTranslationResponsePatched extends Omit<UseTranslationResponse, 't'> {
    t<T extends MessagesKey0>(...args: PatternArguments0<T>): string
  }

  function useTranslation(ns?: Namespace, options?: UseTranslationOptions): UseTranslationResponsePatched
}

type MessagesKey0 = 'hello' |
'how-are-you' |
'bye'
type PatternArguments0<T extends MessagesKey0> = (
  T extends 'hello'
  ? [T, { 'firstName': FluentVariable,'lastName': FluentVariable }]:
T extends 'how-are-you'
  ? [T]:
T extends 'bye'
  ? [T]
  : never
)