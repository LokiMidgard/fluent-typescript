// This file is automatically generated.
// Please do not change this file!

type Message<T extends MessagesKey> = {
  id: T
  value: T
  attributes: Record<string, T>
}

import { FluentArgument } from '@fluent/bundle'
import { TransProps } from 'react-i18next'

declare module 'react-i18next' {
  interface UseTranslationResponsePatched extends Omit<UseTranslationResponse, 't'> {
    t: <T extends MessagesKey>(...args: PatternArguments<T>) => string
  }

  function useTranslation(ns?: Namespace, options?: UseTranslationOptions): UseTranslationResponsePatched
}

declare global {
  interface TransPropsTyped<E extends Element = HTMLDivElement> extends Omit<TransProps<E>, 'i18nKey'> {
    i18nKey: MessagesKey
  }

  function TypeTransTyped<E extends Element = HTMLDivElement>(props: TransPropsTyped<E>): React.ReactElement;
}

type MessagesKey = 'hello' |
'how-are-you' |
'bye'
type PatternArguments<T extends MessagesKey> = (
  T extends 'hello'
  ? [T, { 'firstName': FluentArgument,'lastName': FluentArgument }]:
T extends 'how-are-you'
  ? [T]:
T extends 'bye'
  ? [T]
  : never
)