// This file is automatically generated.
// Please do not change this file!

type Message0<T extends MessagesKey0> = {
  id: T
  value: T
  attributes: Record<string, T>
}

import { FluentVariable } from '@fluent/bundle'
import { LocalizedProps } from '@fluent/react'
import { ReactElement } from 'react'

declare module '@fluent/react' {
  type LocalizedPropsWithoutIdAndVars = Omit<Omit<LocalizedProps, 'id'>, 'vars'>

  type LocalizedPropsPatched0<T extends MessagesKey0> = (
  PatternArguments0<T>[1] extends undefined
    ? {
      typed: true
      id: T
    } & LocalizedPropsWithoutIdAndVars
    : {
      typed: true
      id: T
      vars: PatternArguments0<T>[1]
    } & LocalizedPropsWithoutIdAndVars
)

function Localized<T extends MessagesKey0>(props: LocalizedPropsPatched0<T>): ReactElement;
}

type MessagesKey0 = 'hello-no-name' |
'hello' |
'type-name'
type PatternArguments0<T extends MessagesKey0> = (
  T extends 'hello-no-name'
  ? [T]:
T extends 'hello'
  ? [T, { 'firstName': FluentVariable,'lastName': FluentVariable }]:
T extends 'type-name'
  ? [T]
  : never
)