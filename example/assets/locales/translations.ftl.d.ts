// This file is automatically generated.
// Please do not change this file!

import { FluentBundle, FluentArgument } from '@fluent/bundle'

type Message<T extends MessagesKey> = {
  id: T
  value: T
  attributes: Record<string, T>
}

declare global {
  interface FluentBundleTyped extends FluentBundle {
    getMessage<T extends MessagesKey>(id: T): Message<T>
    formatPattern: <T extends MessagesKey>(...args: PatternArguments<T>) => string
  }
}

type MessagesKey = 'hello' |
'how-are-you' |
'bye'
type PatternArguments<T extends MessagesKey> = (
  T extends 'hello'
  ? [T, { 'firstName': FluentArgument,'lastName': FluentArgument }]:
T extends 'how-are-you'
  ? [T]:
T extends 'bye'
  ? [T]
  : never
)